{"version":3,"sources":["token/token.js","issueService.js","Sidebar.js","Widgets.js","Issues.js","user.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","token","require","issueService","user","authenticatedUser","repo","userAvatar","tokenAuth","allIssues","headers","this","Axios","get","then","res","console","log","catch","req","callback","data","issueId","json","post","issueID","patch","state","list","labels","assignees","Sidebar","props","userSettings","className","to","activeStyle","color","map","e","index","key","id","name","src","alt","getAllLabels","setState","Component","Card","type","title","children","issueNumber","assign","item","login","Label","close","onClick","removeLabel","labelColor","label","document","querySelector","style","backgroundColor","Chip","replace","image","history","createHashHistory","Add","inputHandler","event","target","value","labelHandler","labelSelected","submit","body","addHandler","onChange","IssueView","labelName","labelsRemaining","filter","push","closeIssue","issue","number","alert","removeHandler","created_date","updated_date","avatar_url","created_at","updated_at","CommentField","commentHandler","newComment","postComment","comments","length","comment","date_comment","avatar","getAllCommentsPerIssue","Comment","comment_days_ago","date","Date","year","getFullYear","month","getMonth","day","getDate","now","parseInt","commentDateString","substr","commentDate","UserSetting","logOut","localStorage","setItem","App","loggedIn","handleLogin","postIssue","issues","oldIssue","indexOf","splice","exact","path","component","page","category","hasLoggedIn","getItem","storeAllIssues","SmallContent","Content","IssueContent","open","undefined","trim","Dashboard","displayList","display","displayTable","displaySlide","handleRange","labelSize","querySelectorAll","forEach","x","setAttribute","toggleHideEmpty","hideShow","currentState","hideEmpty","found","openIssues","closedIssues","filt","min","max","closed","UserNameInput","userInputHandler","userInput","RepoSelection","loginHandler","selectedRepo","repos","radios","getAllRepos","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2957cc78.chunk.js","sourcesContent":["\nmodule.exports = {\n    'token': \"a83c0570f1c97d2afe50903ed4de6e2102af2fae\"\n};","import Axios from \"axios\";\n\n\nlet token = require(\"./token/token.js\");\n\n/**\n * @class IssueService\n * @classdesc IssueService is a class that holds all methods for communicating with GitHub API\n */\n\n\nclass IssueService{\n    user = \"\";\n    authenticatedUser = \"\";\n    repo = \"\";\n    userAvatar = \"\";\n    tokenAuth = token.token;\n    allIssues = [];\n\n    storeAuthenticatedUser(){\n        //TODO: This is not working\n        const headers = {\n            'Content-Type': 'application/json',\n            'Accept': 'application/vnd.github.v3.raw',\n            \"Authorization\": `token ${this.tokenAuth}`,\n        };\n        Axios.get(`http://github.com/user/`, {headers: headers}).then(res => console.log(res)).catch(req => console.log(req));\n    }\n\n    storeAllIssues(callback){\n        //TODO: get methods do not filter out closed or open\n        Axios.get(`https://api.github.com/repos/${this.user}/${this.repo}/issues?state=all`).then(res => {\n            this.allIssues = res.data;\n            callback();\n        });\n    }\n\n    getAllLabels(){\n        return Axios.get(`https://api.github.com/repos/${this.user}/${this.repo}/labels?state=all` );\n    }\n\n    getAllRepos(){\n        return Axios.get(`https://api.github.com/users/${this.user}/repos`);\n    }\n\n    getAllCommentsPerIssue(issueId){\n        return Axios.get(`https://api.github.com/repos/${this.user}/${this.repo}/issues/${issueId}/comments`);\n    }\n\n    postIssue(json){\n        const headers = {\n            'Content-Type': 'application/json',\n            'Accept': 'application/vnd.github.v3.raw',\n            \"Authorization\": `token ${this.tokenAuth}`,\n        };\n\n        return Axios.post(`https://api.github.com/repos/${this.user}/${this.repo}/issues`, json , {headers: headers});\n    }\n\n    closeIssue(issueID){\n        const headers = {\n            'Content-Type': 'application/json',\n            'Accept': 'application/vnd.github.v3.raw',\n            \"Authorization\": `token ${this.tokenAuth}`,\n        };\n\n        let json = {\n            state : \"closed\",\n        };\n\n        return Axios.patch(`https://api.github.com/repos/${this.user}/${this.repo}/issues/${issueID}`, json, {headers: headers});\n    }\n\n    removeLabel(issueID, list){\n        let json = {\n            labels: list\n        };\n\n        const headers = {\n            'Content-Type': 'application/json',\n            'Accept': 'application/vnd.github.v3.raw',\n            \"Authorization\": `token ${this.tokenAuth}`,\n        };\n\n        Axios.patch(`https://api.github.com/repos/${this.user}/${this.repo}/issues/${issueID}`, json, {headers: headers}).then(res => console.log(res));\n    }\n\n    removeAssignes(issueID, list){\n        let json = {\n            assignees: list\n        };\n\n        const headers = {\n            'Content-Type': 'application/json',\n            'Accept': 'application/vnd.github.v3.raw',\n            \"Authorization\": `token ${this.tokenAuth}`,\n        };\n\n        Axios.patch(`https://api.github.com/repos/${this.user}/${this.repo}/issues/${issueID}`, json, {headers: headers}).then(res => console.log(res));\n    }\n\n    addAssignees(issueID, list){\n        let json = {\n            assignees: list\n        };\n\n        const headers = {\n            'Content-Type': 'application/json',\n            'Accept': 'application/vnd.github.v3.raw',\n            \"Authorization\": `token ${this.tokenAuth}`,\n        };\n\n        Axios.patch(`https://api.github.com/repos/${this.user}/${this.repo}/issues/${issueID}`, json, {headers: headers}).then(res => console.log(res));\n    }\n\n\n\n    postComment(json, issueID){\n        const headers = {\n            'Content-Type': 'application/json',\n            'Accept': 'application/vnd.github.v3.raw',\n            \"Authorization\": `token ${this.tokenAuth}`,\n        };\n\n        return Axios.post(`https://api.github.com/repos/${this.user}/${this.repo}/issues/${issueID}/comments`, json, {headers: headers});\n        };\n\n\n\n}\n\nexport let issueService = new IssueService();\n\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport {Component} from 'react';\nimport \"./css/materialize.min.css\";\nimport \"./css/style.css\";\nimport {issueService} from \"./issueService\";\n\n\n/**\n * @class Sidebar\n * @classdesc Sidebar is the main navigation for the site.\n */\nexport class Sidebar extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tlabels : [],\n\t\t}\n\n\t}\n\n  render(){\n    return (\n\t\t\t<div className=\"sidebar\">\n\t\t\t\t<div className=\"logo margin-top-30\"></div>\n\n\t\t\t\t<ul className=\"collection grey darken-1\">\n\t\t\t\t\t<NavLink to=\"/add\" activeStyle={{ color: \"orange\" }}>\n\t\t\t\t\t\t<li className=\"collection-item cyan darken-3\">\n\t\t\t\t\t\t\t<div className=\"add\">\n\t\t\t\t\t\t\t\t<i className=\"material-icons\">add_circle_outline</i>\n\t\t\t\t\t\t\t\tNew issue\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<NavLink to=\"/\" activeStyle={{ color: \"orange\" }}>\n\t\t\t\t\t\t<li className=\"collection-item grey darken-2\">\n\t\t\t\t\t\t\t<i className=\"material-icons\">build</i>Dashboard\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</NavLink>\n\n\n\t\t\t\t\t{this.state.labels.map((e,index) =>\n\t\t\t\t\t<NavLink key={index}\n\t\t\t\t\t\tto={\"/\"+e.id}\n\t\t\t\t\t\tactiveStyle={{\n\t\t\t\t\t\t\tcolor: \"orange\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\n\t\t\t\t\t\t<li key={e.name+index} className=\"collection-item grey darken-2\">\n\t\t\t\t\t\t\t{e.name}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t)}\n\n\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tto={\"/0\"}\n\t\t\t\t\t\tactiveStyle={{\n\t\t\t\t\t\t\tcolor: \"orange\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\n\t\t\t\t\t\t<li key={\"unlabeled0\"} className=\"collection-item grey darken-2\">\n\t\t\t\t\t\t\t{\"unlabeled\"}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</NavLink>\n\t\t\t\t</ul>\n\n                <NavLink to=\"/userSettings\">\n\t\t\t\t<div className=\"user-avatar\">\n\t\t\t\t\t<div className=\"user\">\n\t\t\t\t\t\t<div className=\"avatar\">\n\t\t\t\t\t\t\t<img src=\"https://postmediatorontosun.files.wordpress.com/2019/12/cat-e1575303121192.jpg\" alt=\"\"/>\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t{issueService.user}\n\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n                </NavLink>\n\n\t\t\t</div>\n\t\t);\n  }\n\n  \tuserSettings = () => {\n\n\t};\n\n\tcomponentDidMount() {\n  \tissueService.getAllLabels().then(res => this.setState({labels : res.data}));\n  }\n\n}","import React from 'react';\n\nimport { Component } from 'react';\n\n\n\nimport \"./css/materialize.min.css\";\nimport \"./css/style.css\";\n\nimport {NavLink} from \"react-router-dom\";\n\n/**\n * @class Card\n * @classdesc Card is the standard component for displaying issues. Small card component\n */\nexport class Card extends Component{\n  render(){\n      if(this.props.type === \"simple\"){\n          return (\n          \t<div className=\"width-90\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t\t<div className=\"card-title orange-text text-darken-2\">{this.props.title}</div>\n\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n          \t</div>\n\t\t  );\n      }\n      else {\n      \treturn (\n      \t\t<div className=\"card blue-grey darken-1 hoverable\">\n\t\t\t\t<NavLink to={\"/issue/\"+this.props.issueNumber}>\n                    <div className=\"card-content white-text\">\n                        <span className=\"card-title orange-text\">{this.props.title}</span>\n                        <p>{this.props.children}</p>\n                    </div>\n\t\t\t\t</NavLink>\n                    <div className=\"card-action orange-text\">\n                        {this.props.assign.map(item =>\n                            <div key={item} className=\"chip grey lighten-2\">{item.login} <i key={item.name} className=\"close material-icons\">close</i></div>\n                        )}\n                    </div>\n      \t\t</div>\n\t\t);\n      }\n  }\n\n}\n\n/**\n * @class Label\n * @classdesc Label is the standard component for displaying labels.\n */\nexport class Label extends Component{\n  render(){\n    return (\n    \t<div className={`card darken-1`} id={\"issue\"+this.props.id}>\n\t\t\t<div className=\"card-title center-align font12\">{this.props.type}\n\t\t\t{this.props.close===true?\n                <i className=\"close material-icons pointer\" onClick={() => {this.props.removeLabel(this.props.type)}}>close</i>\n                :null\n\t\t\t}\n\t\t\t</div>\n\n    \t</div>\n\t\t);\n  }\n\n  componentDidMount() {\n  \tlet labelColor = this.props.color;\n  \tlet label = document.querySelector(\"#issue\"+this.props.id);\n  \tif(label != null){\n  \t\tlabel.style.backgroundColor = `#${labelColor}`;\n\t}\n  }\n}\n\n/**\n * @class Chip\n * @classdesc Chip is the component used for showing assignees on a issue\n */\nexport class Chip extends Component{\n    render(){\n            return (\n                <div className=\"chip black-text\" id={this.props.type.replace(/ /g,'')}>\n                    <img src={this.props.image} alt=\"\"/>\n                        {this.props.type}\n                    <i className=\"close material-icons\">close</i>\n                </div>\n            )\n    }\n\n    componentDidMount() {\n        let labelColor = this.props.color;\n        let label = document.querySelector(\"#issue\"+this.props.id);\n        if(label != null){\n            label.style.backgroundColor = `#${labelColor}`;\n        }\n    }\n}\n\n","import * as React from 'react';\nimport {Label, Card} from './Widgets.js';\nimport { Component } from 'react';\nimport {issueService} from \"./issueService\";\nimport {Chip} from \"./Widgets\";\nimport { createHashHistory } from 'history';\nlet history = createHashHistory();\n\n\n/**\n * @class Add\n * @classdesc Add is the component where user can add new issues. Holds the forms for submission.\n */\nexport class Add extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            labels : [],\n            title : \"\",\n            body : \"\",\n            labelSelected : \"\",\n        };\n    }\n\n    render(){\n        return (\n            <div>\n                <Card title={this.props.title} type=\"simple\">\n                    <div className=\"addForm\">\n                        <div className=\"row\">\n                            <div className=\"col l12 m12\">\n                                <label>Title</label>\n                                <input type=\"text\" className=\"active\" id=\"issueTitle\" onChange={this.inputHandler} name=\"title\"/>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col l12 m12\">\n                                <label>Description</label>\n                                <textarea name=\"body\" onChange={this.inputHandler}/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col l6\">\n                                <label>Label:</label>\n                                <select className=\"browser-default\" id=\"selectIssue\" onChange={this.labelHandler}>\n                                    {this.state.labels.map(label =>\n                                    <option>{label.name}</option>\n                                    )}\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <button className=\"btn\" onClick={this.submit}>Add issue</button>\n                        </div>\n                    </div>\n                </Card>\n\n            </div>\n        );\n    }\n\n    /**\n     * Handles the inputfields and stores information in state.\n     * @param {event}event\n     * Takes in event from onChange\n     */\n    inputHandler = (event) => {\n        console.log(event.target.name);\n        this.setState({[event.target.name] : event.target.value });\n    };\n\n    labelHandler = (event) => {\n        this.setState({labelSelected : event.target.value});\n    };\n\n    componentDidMount() {\n        issueService.getAllLabels().then(res => this.setState({labels : res.data, labelSelected : res.data[0].name}));\n    }\n\n    /**\n     * Submits information stored in state from forms, and adds a new issue to repo.\n     */\n    submit = () => {\n\n        let json = {\n            title : this.state.title,\n            body : this.state.body,\n            labels : [this.state.labelSelected]\n        };\n\n        console.log(json.labels);\n       this.props.addHandler(json);\n    };\n\n\n\n\n}\n\n/**\n * @class IssueView\n * @classdesc IssueView is for display all information about a specific issue\n */\nexport class IssueView extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            issue : this.props.issue,\n            created_date : \"\",\n            updated_date : \"\",\n        };\n    }\n\n    render(){\n        return(\n            <div className=\"\">\n            <div className=\"\">\n                    <Card title={this.props.title} type=\"simple\">\n                        <div className=\"row\">\n                            <div className=\"col l9\">\n                                <div className=\"divider\"> </div>\n                            {this.props.body}\n                            <br/>\n                            </div>\n                            <div className=\"col l3\">\n                                <div className=\"card-panel teal lighten-5 \">\n                                    <span className=\"bold\">Labels:</span>\n                                    <p>\n                                    {this.props.label.map(label =>\n                                        <Label type={label.name} color={label.color} close={true} removeLabel={this.removeLabel}/>\n                                        )}\n                                        <input type=\"button\" className=\"btn btn-small\" value=\"Add label\"/>\n                                    </p><br/>\n                                    <span className=\"bold\">Assigned</span>\n                                    <div className=\"row\">\n\n\n                                        {this.state.issue.assignees !== null && this.state.issue.assignees !== 0 ? this.state.issue.assignees.map(issue =>\n                                            <div className=\"addForm\">\n                                                <Chip type={issue.login} image={issue.avatar_url}/>\n                                            </div>\n                                        ):<div className=\"addForm\">{\"No one assigned\"}</div>}\n\n\n                                        <div className=\"addForm\">\n                                        <input type=\"button\" className=\"btn btn-small\" value=\"Assign me\"/>\n                                        <input type=\"button\" className=\"btn btn-small\" value=\"Assign someone\"/>\n                                        </div>\n                                    </div>\n\n                                    <p><b>Date created:</b><br/>\n                                    {this.state.created_date}\n                                    </p><br/>\n                                    <p><b>Last updated:</b><br/>\n                                    {this.state.updated_date}\n                                    </p>\n                                    <br/>\n                                    <input type=\"button\" className=\"btn btn-small red\" value=\"Close issue\" onClick={this.closeIssue}/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"\">\n\n\n                        </div>\n                        <div className=\"divider\"></div>\n                        <div className=\"\">\n                            <CommentField issueId={this.props.issueId}/>\n                        </div>\n                    </Card>\n\n            </div>\n\n            </div>\n        )\n    }\n\n    removeLabel = (labelName) => {\n        let labelsRemaining = [];\n        console.log(this.state.labels);\n        this.props.label.filter(e => e.name !== labelName).map(label => labelsRemaining.push(label.name));\n\n        issueService.removeLabel(this.props.issueId, labelsRemaining);\n    };\n\n    componentDidMount() {\n        let created_at = this.props.issue.created_at.replace(/Z/g, '').replace(/T/g, ' at ');\n        let updated_at = this.props.issue.updated_at.replace(/Z/g, '').replace(/T/g, ' at ');\n        this.setState({\n            created_date : created_at,\n            updated_date : updated_at,\n        });\n    }\n\n    closeIssue = () => {\n        issueService.closeIssue(this.props.issue.number).then(res =>{\n            alert(\"Issue closed\");\n            history.push(\"/\");\n            this.props.removeHandler(res.data);\n        }).catch(req => console.log(req));\n\n\n    }\n\n\n}\n\n/**\n * @class CommentField\n * @classdesc CommentField is the parent component of the comments, it both shows submitted comments, and also holds the\n * input form for submitting new comments\n */\nexport class CommentField extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            comments : [],\n            newComment : \"\",\n        };\n    }\n\n    render(){\n        return(\n            <div className=\"addForm\">\n                {this.state.comments.length>0?this.state.comments.map(comment =>\n                    <Comment user={comment.user.login} date_comment={comment.created_at} comment={comment.body} avatar={comment.user.avatar_url}/>\n                ):\"No comments\"}\n\n                <textarea onChange={this.commentHandler}>\n\n                </textarea>\n\n                <button className=\"btn teal\" onClick={this.postComment}>Comment</button>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        issueService.getAllCommentsPerIssue(this.props.issueId).then(res => this.setState({comments: res.data}));\n    }\n\n    commentHandler = (event) => {\n        this.setState({newComment : event.target.value}, () => {\n            console.log(this.state.newComment);\n        })\n    };\n\n    postComment = () => {\n        let json = {\n            body : this.state.newComment\n        };\n\n        issueService.postComment(json, this.props.issueId);\n    }\n\n}\n\n/**\n * @class Comment\n * @classdesc Comment is the component that holds information on one comment. This component is usually mapped\n * and shows comment information through props\n */\nexport class Comment extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            comment_days_ago : 0,\n        };\n    }\n\n    render(){\n        return(\n            <div>\n                <div className=\"card grey lighten-4\">\n                    <div className=\"row\">\n                        <div className=\"col l1 center-align\">\n                            <img src={this.props.avatar} className=\"avatar-comments\" alt=\"\"/>\n                        </div>\n                        <div className=\"col l11\">\n                            <b>{this.props.user}</b> commented {this.state.comment_days_ago} days ago\n                            <hr></hr>\n                            <div className=\"row\">\n                            <div className=\"col l12\">\n                                {this.props.comment}\n                            </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        let date = new Date();\n        let year = date.getFullYear();\n        let month = date.getMonth()+1;\n        let day = date.getDate();\n\n\n        let now = parseInt(year+month+day);\n\n\n        let commentDateString = this.props.date_comment.replace(/-/g, '').substr(0,8);\n        let commentDate = parseInt(commentDateString);\n        this.setState({comment_days_ago : now-commentDate});\n    }\n\n\n}","import React, {Component} from 'react';\nimport { createHashHistory } from 'history';\n\n\nlet history = createHashHistory();\n\n\nexport class UserSetting extends Component{\n    render() {\n        return(\n            <div>\n                <div className=\"card\">\n\n                    <div className=\"card-content\">\n                        <div className=\"card-title\">User settings</div>\n                        <div className=\"row\">\n                            <div className=\"col l4\">\n                                username\n                            </div>\n\n                            <div className=\"col l2\">\n                                User image\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-4\">\n                                <button className=\"btn\" onClick={this.logOut}>Log out</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    logOut = () => {\n        localStorage.setItem(\"loggedIn\", \"false\");\n        this.props.logOut();\n        history.push(\"/\");\n    }\n}","import React, {Component} from 'react';\nimport {HashRouter, NavLink, Route} from \"react-router-dom\";\nimport {Sidebar} from './Sidebar.js';\nimport {Label, Card} from './Widgets.js';\nimport {Add, IssueView} from \"./Issues\";\n\nimport \"./css/materialize.min.css\";\nimport \"./css/style.css\";\nimport {issueService} from \"./issueService\";\n\nimport {FaEllipsisH} from \"react-icons/all\";\nimport {FaTh} from \"react-icons/all\";\nimport {FaBars} from \"react-icons/all\";\n\n\nimport {UserSetting} from \"./user\";\n\n\n\n\n\n\n/**\n * @class App\n * @classdesc App is the uppermost parent that holds all components and also handles the navlink with hashroutes.\n */\nclass App extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tissues : [],\n\t\t\tlabels : [],\n\t\t\ttitle : \"\",\n\t\t\tloggedIn : false\n\t\t};\n\t}\n\n\trender(){\n\t\tif(this.state.loggedIn){\n\t\t\treturn (\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<div className=\"header-drag\"></div>\n\n\t\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t\t\t<div className=\"sidebar\" id=\"menuNavigation\">\n\t\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"contentMain\" id=\"contentPages\">\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\t\t\tcomponent={() => <Content page={<Dashboard issues={this.state.issues} />}/>}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact path=\"/add\"\n\t\t\t\t\t\t\t\t\tcomponent={() => <SmallContent page={<Add addHandler={this.addHandler} title={\"Post new issue\"}/>}/>}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact path=\"/userSettings\"\n\t\t\t\t\t\t\t\t\tcomponent={() => <SmallContent page={<UserSetting logOut={this.logOut}/>}/>}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{this.state.labels.map(e =>\n\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\texact path={\"/\"+e.id}\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <Content page={<IssueContent category={e.name} color={e.color} />\n\t\t\t\t\t\t\t\t\t\t}/>}\n\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact path=\"/0\"\n\t\t\t\t\t\t\t\t\tcomponent={() => <Content page={<IssueContent category={\"unlabeled\"} color={\"FF7F00\"} />}/>}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{this.state.issues.map(issue =>\n\n\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\texact path={\"/issue/\"+issue.number}\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <Content page={<IssueView title={issue.title} body={issue.body} assign={issue.assignees} label={issue.labels} issue={issue} removeHandler={this.removeHandler} issueNumber={issue.number}/>}/>}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</HashRouter>\n\t\t\t);\n\t\t} else{\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t<div className=\"header-drag\"></div>\n\t\t\t\t<div className=\"login-form\">\n\t\t\t\t<HashRouter>\n\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact path=\"/\"\n\t\t\t\t\t\t\tcomponent={() => <UserNameInput/>}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath=\"/repos\"\n\t\t\t\t\t\t\t\tcomponent={() => <RepoSelection handleLogin={this.handleLogin}/>}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t</HashRouter>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n\n\tlogOut = () => {\n\t\tthis.setState({loggedIn : false});\n\t};\n\n\thandleLogin = () => {\n\t\tlocalStorage.setItem(\"loggedIn\", \"true\");\n\t\tthis.setState({loggedIn : true});\n\t};\n\n\taddHandler = (json) => {\n\t\t\tissueService.postIssue(json).then(res => {\n\t\t\t\talert(\"Issue has been posted\");\n\t\t\t\tissueService.allIssues.push(res.data);\n\t\t\t\tthis.setState({issues : issueService.allIssues});\n\t\t\t}).catch(e => {\n\t\t\t\talert(\"Something went wrong\");\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\n\t\t};\n\n\tremoveHandler = (issue) => {\n\t\tlet oldIssue = issueService.allIssues.filter(e => e.id === issue.id);\n\t\tlet index = issueService.allIssues.indexOf(oldIssue[0]);\n\t\tissueService.allIssues.splice(index, 1, issue);\n\t};\n\n\t\tcomponentDidMount() {\n\t\t\tlet hasLoggedIn = localStorage.getItem(\"loggedIn\");\n\t\t\tconsole.log(hasLoggedIn);\n\t\t\tif(hasLoggedIn != null){\n\t\t\t\tif(hasLoggedIn === \"true\"){\n\t\t\t\t\tthis.setState({loggedIn : true});\n\n\t\t\t\t\tissueService.storeAllIssues(() => {\n\t\t\t\t\t\tthis.setState({issues : issueService.allIssues});\n\t\t\t\t\t});\n\n\t\t\t\t\tissueService.getAllLabels().then(res => this.setState({labels: res.data}));\n\t\t\t\t\t//issueService.storeAuthenticatedUser();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\n\n}\n\nexport class SmallContent extends Component{\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"smallContent\">\n\t\t\t\t{this.props.page}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport class Content extends Component{\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"content\">\n\t\t\t\t{this.props.page}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n/**\n * @class IssueContent\n * @classdesc IssueContent is the main container for all the content\n */\nclass IssueContent extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tissues : issueService.allIssues,\n\t\t}\n\t}\n\trender(){\n      \treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Label type={this.props.category} color={this.props.color}/>\n\t\t\t\t\t<div className=\"fixer\">\n\t\t\t\t\t\t{this.state.issues.map(issue =>\n\t\t\t\t\t\t\t<div className=\"col l3\">\n\t\t\t\t\t\t\t\t<Card title={issue.title} id={issue.id} issueNumber={issue.number} assign={issue.assignees}>\n\t\t\t\t\t\t\t\t\t{issue.body}\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t);\n  }\n\n  componentDidMount() {\n\n\t  let open = this.state.issues.filter(issue => (issue.state !== undefined && issue.state.trim() === \"open\"));\n\t  this.setState({issues: open}, () => {\n\t\t  if(this.props.category === \"unlabeled\"){\n\t\t\t  this.setState({issues : this.state.issues.filter(e => e.labels.length === 0)});\n\t\t  } else {\n\t\t\t  this.setState({issues : this.state.issues.filter(e => e.labels[0] != null && e.labels[0].name.trim() === this.props.category)});\n\t\t  }\n\t  });\n\n  }\n\n\n}\n\n/**\n * @class Dashboard\n * @classdesc Dashboard is the landing page when logged in, and displays all issues with labels categorised.\n */\nclass Dashboard extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tissues : issueService.allIssues,\n\t\t\tlabels : [],\n\t\t\tdisplay: \"slide\",\n\t\t\thideShow : \"Hide empty\",\n\t\t\tlabelSize : 200,\n\t\t\topenIssues : [],\n\t\t\tclosedIssues: [],\n\t\t}\n\t}\n\n\trender(){\n\t\tif(this.state.openIssues.length === 0){\n\t\t\treturn (\n\t\t\t\t<div className=\"center-progress center\">\n\t\t\t\t\tBuilding skynet\n\t\t\t\t\t<div className=\"progress\">\n\t\t\t\t\t\t<div className=\"indeterminate\"> </div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t} else{\n\t\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\t\t{this.state.display === \"slide\" ?\n\t\t\t\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t\t\t\t{this.state.labels.map(e =>\n\t\t\t\t\t\t\t\t\t<div className=\"label-width\">\n\t\t\t\t\t\t\t\t\t\t<Label type={e.name} color={e.color} id={e.id}/>\n\n\t\t\t\t\t\t\t\t\t\t{this.state.openIssues.filter(filt => filt.labels[0] != null && e.name === filt.labels[0].name).map((issue,index) =>\n\t\t\t\t\t\t\t\t\t\t\t<Card key={issue} title={issue.title} issueNumber={issue.number} assign={issue.assignees}>\n\t\t\t\t\t\t\t\t\t\t\t\t{issue.body}\n\t\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<div className=\"label-width\">\n\t\t\t\t\t\t\t\t\t<Label type={\"unlabeled\"} color={\"FF7F00\"} id={0}/>\n\t\t\t\t\t\t\t\t\t{this.state.openIssues.filter(e => e.labels.length === 0).map(issue =>\n\t\t\t\t\t\t\t\t\t\t<Card title={issue.title} id={issue.id} issueNumber={issue.number} assign={issue.assignees}>\n\t\t\t\t\t\t\t\t\t\t\t{issue.body}\n\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t:null}\n\n\t\t\t\t\t\t{this.state.display === \"table\"?\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t{this.state.labels.map(e =>\n\t\t\t\t\t\t\t\t\t<div className=\"col l3\">\n\t\t\t\t\t\t\t\t\t\t<Label type={e.name} color={e.color} id={e.id}/>\n\n\t\t\t\t\t\t\t\t\t\t{this.state.openIssues.filter(filt => filt.labels[0] != null && e.name === filt.labels[0].name).map(issue =>\n\t\t\t\t\t\t\t\t\t\t\t<Card title={issue.title} id={issue.id} issueNumber={issue.number} assign={issue.assignees}>\n\t\t\t\t\t\t\t\t\t\t\t\t{issue.body}\n\t\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<div className=\"col l3\">\n\t\t\t\t\t\t\t\t\t<Label type={\"unlabeled\"} color={\"FF7F00\"} id={0}/>\n\t\t\t\t\t\t\t\t\t{this.state.openIssues.filter(e => e.labels.length === 0).map(issue =>\n\t\t\t\t\t\t\t\t\t\t<Card title={issue.title} id={issue.id} issueNumber={issue.number} assign={issue.assignees}>\n\t\t\t\t\t\t\t\t\t\t\t{issue.body}\n\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t:null}\n\n\t\t\t\t\t\t{this.state.display === \"list\"?\n\t\t\t\t\t\t\t<div className=\"padding-bottom-50\">\n\n\t\t\t\t\t\t\t\t{this.state.labels.map(e =>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Label type={e.name} color={e.color} id={e.id}/>\n\n\t\t\t\t\t\t\t\t\t\t{this.state.openIssues.filter(filt => filt.labels[0] != null && e.name === filt.labels[0].name).map(issue =>\n\t\t\t\t\t\t\t\t\t\t\t<Card title={issue.title} id={issue.id} issueNumber={issue.number} assign={issue.assignees}>\n\t\t\t\t\t\t\t\t\t\t\t\t{issue.body}\n\t\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Label type={\"unlabeled\"} color={\"FF7F00\"} id={0}/>\n\t\t\t\t\t\t\t\t\t{this.state.openIssues.filter(e => e.labels.length === 0).map(issue =>\n\t\t\t\t\t\t\t\t\t\t<Card title={issue.title} id={issue.id} issueNumber={issue.number} assign={issue.assignees}>\n\t\t\t\t\t\t\t\t\t\t\t{issue.body}\n\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t:null}\n\n\n\t\t\t\t\t<div className=\"filter-bar\">\n\t\t\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t\t\t<div onClick={this.displayTable} className=\"pointer filter-icon margin-right-15\">\n\t\t\t\t\t\t\t\t<FaTh/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div onClick={this.displayList} className=\"pointer filter-icon margin-right-15\">\n\t\t\t\t\t\t\t\t<FaBars/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div onClick={this.displaySlide} className=\"pointer filter-icon margin-right-15\">\n\t\t\t\t\t\t\t\t<FaEllipsisH/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"filter-icon pointer margin-right-15\" onClick={this.toggleHideEmpty}>\n\t\t\t\t\t\t\t\t{this.state.hideShow}\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t\t\t<div className=\"range-field\">\n\t\t\t\t\t\t\t\t\t<input type=\"range\"  min=\"200\" max=\"600\" value={this.state.labelSize} onChange={this.handleRange}/>\n\t\t\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n\n\tdisplayList = () => {\n\t\tthis.setState({display : \"list\"});\n\t};\n\n\tdisplayTable = () => {\n\t\tthis.setState({display : \"table\"});\n\t};\n\n\tdisplaySlide = () => {\n\t\tthis.setState({display : \"slide\"});\n\t};\n\n\thandleRange = (event) => {\n\t\tthis.setState({labelSize : event.target.value}, () => {\n\t\t\tlet label = document.querySelectorAll(\".label-width\");\n\t\t\tif(label != null){\n\t\t\t\tlabel.forEach( x=> x.setAttribute(\"style\",`width:${this.state.labelSize}px`));\n\n\t\t\t}\n\t\t});\n\n\t};\n\n\tcomponentDidMount() {\n\t\tissueService.getAllLabels().then(res => {\n\t\t\tthis.setState({labels : res.data});\n\n\t\t});\n\n\t\t\tlet open = this.state.issues.filter(issue => (issue.state !== undefined && issue.state.trim() === \"open\"));\n\t\t\tlet closed = this.state.issues.filter(issue => (issue.state !== undefined && issue.state === \"closed\"));\n\t\t\tthis.setState({openIssues : open, closedIssues: closed});\n\n\n\t}\n\n\t/**\n\t * Hides labels if there are no issues associated with it.\n\t */\n\ttoggleHideEmpty = () => {\n\t\tif(this.state.hideShow === \"Hide empty\"){\n\t\t\tlet currentState = this.state;\n\t\t\tlet hideEmpty = [];\n\n\t\t\tcurrentState.issues.map(issue => {\n\t\t\t\tif(issue.labels.length !== 0){\n\t\t\t\t\tlet found = false;\n\t\t\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\t\t\thideEmpty.map(e => {\n\t\t\t\t\t\tif(e.name === issue.labels[0].name){\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif(!found){\n\t\t\t\t\t\thideEmpty.push(issue.labels[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//TODO: FIX THIS, NOT WORKING AFTER STORE CHANGE\n\t\t\t\treturn null\n\t\t\t});\n\n\t\t\tthis.setState({labels : hideEmpty, hideShow : \"Show empty\"});\n\t\t} else{\n\t\t\tissueService.getAllLabels().then(res => {\n\t\t\t\tthis.setState({labels : res.data, hideShow : \"Hide empty\"});\n\t\t\t});\n\t\t}\n\n\t}\n\n\n\n}\n\n/**\n * @class UserNameInput\n * @classdesc UserNameInput is the first component the user sees, that lets user write in their username.\n *  RepoSelection uses the user input from this component to get their repos listed out.\n */\nexport class UserNameInput extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t\t\t<div className=\"card-title\">Login</div>\n\t\t\t\t\t\t\t<label>GitHub User-name</label>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"input-field\" id=\"usernameInput\"/>\n\t\t\t\t\t\t\t<NavLink to=\"/repos\">\n\t\t\t\t\t\t\t<button className=\"btn\" onClick={this.userInputHandler}>Next</button>\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tuserInputHandler = () => {\n\t\tlet userInput = document.querySelector(\"#usernameInput\").value;\n\t\tissueService.user = userInput;\n\t}\n\n}\n\n/**\n * @class RepoSelection\n * @classdesc RepoSelection lists up all repos associated with user, and lets user select repo.\n */\nexport class RepoSelection extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\trepos : [],\n\t\t\tradios : [],\n\t\t}\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div className=\"card width-30 login-form\">\n\t\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t\t<div className=\"card-title\">Choose repo</div>\n\t\t\t\t\t\t{this.state.repos.map((repos, index) =>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<input name=\"group1\" type=\"radio\" id=\"radioRepo\" value={repos.name}/>\n\t\t\t\t\t\t\t\t<span>{repos.name}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<button className=\"btn\" onClick={this.loginHandler}>Next</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\n\t}\n\tcomponentDidMount() {\n\t\tissueService.getAllRepos().then(res => this.setState({repos: res.data}));\n\t}\n\n\tloginHandler = () => {\n\t\tlet selectedRepo = document.querySelector(\"input[name = group1]:checked\").value;\n\t\tissueService.repo = selectedRepo;\n\t\tthis.props.handleLogin();\n\t}\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"," import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}